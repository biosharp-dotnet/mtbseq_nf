// NCBI API key
ncbi_api_key = ""

genomeIds = ["ERR841438", "ERR841440"]

run_type = "local" // OR "sra"

local_location = "/work/data/multiple_samples" // single_sample OR multiple_samples

analysis_mode = "parallel" // OR "batch"

library_name = "illumina"

outdir = "/work/results"

user = "root"

project_name = "prj"


samplesheet_name = "${params.project_name}_samples.tsv"


//NOTE: Setting this OPTION will skip all filtering steps and report the calculated information for all positions in the input file.
// The all_vars only needs to be activated in MTBseq. But in mtbseq-nf we'll specify it as false
global_all_vars = false

// Setting this OPTION will add an additional filter that excludes all variants except SNPs.
global_snp_vars = false

// Setting this OPTION has major implications on how the mapping data for each position is processed. By default, the majority allele is called and taken for further calculations.
// If the --lowfreq_vars OPTION is set, MTBseq will consider the majority allele distinct from wild type, if such an allele is present.
// This means that only in this detection mode, MTBseq will report variants present only in subpopulations, i.e. low frequency mutations.
// Of course, OPTIONS --mincovf, --mincovr, --minphred and --minfreq need to be set accordingly.
// Please be aware that output generated in this detection mode should not be used for phylogenetic analysis.
global_lowfreq_vars = false

// The OPTION sets a threshold for the sequence data quality to be used for the mpileup creation
global_minbqual = 13

// The OPTION sets a minimum forward read coverage threshold. Alleles must have a forward coverage of this VALUE or higher to be considered.
global_mincovf = 4

// The OPTION sets a minimum reverse read coverage threshold. Alleles must have a reverse coverage of this VALUE or higher to be considered.
global_mincovr = 4

// The OPTION sets a minimum number of reads indicating an allele with a phred score of at least 20.
global_minphred = 4

// The OPTION sets a minimum frequency for an allele.
global_minfreq = 75

// The option sets a minimum percentage of samples with unambiguous information for position.
global_unambig = 95

// The OPTION sets a window size in which the algorithm scans for the occurrence of multiple variants within the same sample.
// If more than one variant occurs within this window in the same sample, the positions will be excluded.
global_window = 12

// The OPTION sets a SNP distance that is used to classify samples into groups of samples, using agglomerative clustering.
// If SNP distances between samples are less or equal this VALUE, they are grouped together.
global_distance = 12

// The OPTION sets the maximum number of CPUs to use within the pipeline.
// You can use more than one core in order to execute the pipeline faster. 8 is the current maximum.
global_threads = 4


// This OPTION sets the reference genome for the read mapping.
// The update default path is for the bioconda::mtbseq docker container.
global_ref_reference_genome_name = "M._tuberculosis_H37Rv_2015-11-13"
global_ref_reference_genome_path = "${baseDir}/data/references/ref/M._tuberculosis_H37Rv_2015-11-13*"


// This OPTION sets a list of known variant positions associated to drug resistance for resistance prediction.
// The update default path is for the bioconda::mtbseq docker container.
global_ref_resistance_list  = "${baseDir}/data/references/res/MTB_Resistance_Mediating.txt"

// This OPTION sets a list of interesting regions to be used for annotation of detected variants
// The update default path is for the bioconda::mtbseq docker container.
global_ref_interesting_regions = "${baseDir}/data/references/res/MTB_Extended_Resistance_Mediating.txt"

// This OPTION specifies a gene ref_gene_categories file to annotate essential and non-essential genes as well as repetitive regions. SNPs in repetitive regions will be excluded for phylogenetic analysis.
// The update default path is for the bioconda::mtbseq docker container.
global_ref_gene_categories = "${baseDir}/data/references/cat/MTB_Gene_Ref_Gene_Categories.txt"

// This OPTION specifies a file for base quality recalibration. The list must be in VCF format and should contain known SNPs.
// The update default path is for the bioconda::mtbseq docker container.
global_ref_base_quality_recalibration = "${baseDir}/data/references/res/MTB_Base_Calibration_List.vcf"





// Module level parameters
TBBWA {
    results_dir = params.outdir
    save_mode = 'copy'
    should_publish = true

    cpus = params.global_threads

    ref_reference_genome_name = params.global_ref_reference_genome_name
    ref_resistance_list = params.global_ref_resistance_list
    ref_interesting_regions = params.global_ref_interesting_regions
    ref_gene_categories = params.global_ref_gene_categories
    ref_base_quality_recalibration = params.global_ref_base_quality_recalibration

}

TBREFINE {
    results_dir = params.outdir
    save_mode = 'copy'
    should_publish = true

    cpus = params.global_threads

    ref_reference_genome_name = params.global_ref_reference_genome_name
    ref_resistance_list = params.global_ref_resistance_list
    ref_interesting_regions = params.global_ref_interesting_regions
    ref_gene_categories = params.global_ref_gene_categories
    ref_base_quality_recalibration = params.global_ref_base_quality_recalibration


}

TBPILE {
    results_dir = params.outdir
    save_mode = 'copy'
    should_publish = true

    cpus = params.global_threads

    ref_reference_genome_name = params.global_ref_reference_genome_name
    ref_resistance_list = params.global_ref_resistance_list
    ref_interesting_regions = params.global_ref_interesting_regions
    ref_gene_categories = params.global_ref_gene_categories
    ref_base_quality_recalibration = params.global_ref_base_quality_recalibration



}

TBLIST {
    results_dir = params.outdir
    save_mode = 'copy'
    should_publish = true

    cpus = params.global_threads

    minbqual = params.global_minbqual

    ref_reference_genome_name = params.global_ref_reference_genome_name
    ref_resistance_list = params.global_ref_resistance_list
    ref_interesting_regions = params.global_ref_interesting_regions
    ref_gene_categories = params.global_ref_gene_categories
    ref_base_quality_recalibration = params.global_ref_base_quality_recalibration


}

TBVARIANTS {
    results_dir = params.outdir
    save_mode = 'copy'
    should_publish = true

    all_vars = params.global_all_vars
    snp_vars = params.global_snp_vars
    lowfreq_vars = params.global_lowfreq_vars
    mincovf = params.global_mincovf
    mincovr = params.global_mincovr
    minphred = params.global_minphred
    minfreq = params.global_minfreq

    ref_reference_genome_name = params.global_ref_reference_genome_name
    ref_resistance_list = params.global_ref_resistance_list
    ref_interesting_regions = params.global_ref_interesting_regions
    ref_gene_categories = params.global_ref_gene_categories
    ref_base_quality_recalibration = params.global_ref_base_quality_recalibration


}

TBSTATS {
    project_name = params.project_name
    results_dir = params.outdir
    save_mode = 'copy'
    should_publish = true


    all_vars = params.global_all_vars
    snp_vars = params.global_snp_vars
    lowfreq_vars = params.global_lowfreq_vars
    mincovf = params.global_mincovf
    mincovr = params.global_mincovr
    minphred = params.global_minphred
    minfreq = params.global_minfreq

    ref_reference_genome_name = params.global_ref_reference_genome_name
    ref_resistance_list = params.global_ref_resistance_list
    ref_interesting_regions = params.global_ref_interesting_regions
    ref_gene_categories = params.global_ref_gene_categories
    ref_base_quality_recalibration = params.global_ref_base_quality_recalibration


}

TBJOIN {
    results_dir = params.outdir
    save_mode = 'copy'
    should_publish = true
    project_name = params.project_name

    all_vars = params.global_all_vars
    snp_vars = params.global_snp_vars
    lowfreq_vars = params.global_lowfreq_vars
    mincovf = params.global_mincovf
    mincovr = params.global_mincovr
    minphred = params.global_minphred
    minfreq = params.global_minfreq

    ref_reference_genome_name = params.global_ref_reference_genome_name
    ref_resistance_list = params.global_ref_resistance_list
    ref_interesting_regions = params.global_ref_interesting_regions
    ref_gene_categories = params.global_ref_gene_categories
    ref_base_quality_recalibration = params.global_ref_base_quality_recalibration



}

TBSTRAINS {
    project_name = params.project_name
    results_dir = params.outdir
    save_mode = 'copy'
    should_publish = true


    all_vars = params.global_all_vars
    snp_vars = params.global_snp_vars
    lowfreq_vars = params.global_lowfreq_vars
    mincovf = params.global_mincovf
    mincovr = params.global_mincovr
    minphred = params.global_minphred
    minfreq = params.global_minfreq

    ref_reference_genome_name = params.global_ref_reference_genome_name
    ref_resistance_list = params.global_ref_resistance_list
    ref_interesting_regions = params.global_ref_interesting_regions
    ref_gene_categories = params.global_ref_gene_categories
    ref_base_quality_recalibration = params.global_ref_base_quality_recalibration


}



TBAMEND {
    results_dir = params.outdir
    save_mode = 'copy'
    should_publish = true
    project_name = params.project_name


    window = params.global_window
    unambig = params.global_unambig
    minfreq = params.global_minfreq
    minphred = params.global_minphred
    mincovr = params.global_mincovr

    ref_reference_genome_name = params.global_ref_reference_genome_name
    ref_resistance_list = params.global_ref_resistance_list
    ref_interesting_regions = params.global_ref_interesting_regions
    ref_gene_categories = params.global_ref_gene_categories
    ref_base_quality_recalibration = params.global_ref_base_quality_recalibration


}

TBGROUPS {
    results_dir = params.outdir
    save_mode = 'copy'
    should_publish = true
    project_name = params.project_name

    distance = params.global_distance

    ref_reference_genome_name = params.global_ref_reference_genome_name
    ref_resistance_list = params.global_ref_resistance_list
    ref_interesting_regions = params.global_ref_interesting_regions
    ref_gene_categories = params.global_ref_gene_categories
    ref_base_quality_recalibration = params.global_ref_base_quality_recalibration


}

TBFULL {
    results_dir = params.outdir
    save_mode = 'copy'
    should_publish = true

    minbqual = params.global_window
    mincovf = params.global_window
    mincovr = params.global_window
    minphred = params.global_window
    minfreq = params.global_window
    unambig = params.global_window
    window = params.global_window
    distance = params.global_distance


    ref_reference_genome_name = params.global_ref_reference_genome_name
    ref_resistance_list = params.global_ref_resistance_list
    ref_interesting_regions = params.global_ref_interesting_regions
    ref_gene_categories = params.global_ref_gene_categories
    ref_base_quality_recalibration = params.global_ref_base_quality_recalibration


}

RENAME_FILES {
    results_dir = "${params.outdir}/rename_files"
    save_mode = 'copy'
    should_publish = true
}
